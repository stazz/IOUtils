<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.3;netstandard2.0;netcoreapp1.1;netcoreapp2.0;net45;net40</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    <TreatSpecificWarningsAsErrors />
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

   <ItemGroup>
      <ProjectReference Include="..\IOUtils.Network.Configuration\IOUtils.Network.Configuration.csproj" />
   </ItemGroup>
   
   <ItemGroup>
      <PackageReference Include="ResourcePooling.Async.Abstractions" Version="1.0.0" />
   </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <Reference Include="System.Runtime" />
    <Reference Include="System.Threading.Tasks" />
  </ItemGroup>

   <PropertyGroup>
    <VersionPrefix>1.0.0</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <AssemblyTitle>$(AssemblyName)</AssemblyTitle>
    <Description>Easy-to-use async resource pool for streams operating on sockets.</Description>
  </PropertyGroup>

  <!-- NuGet package stuff -->
  <PropertyGroup>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition=" '$(VersionSuffix)' != ''">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
    <PackageReleaseNotes>Separated common configuration into its own project, and added easy-to-use methods to default usecases of transforming that configuration into NetworkStreamFactoryConfiguration. Added possibility to connect to Unix sockets.</PackageReleaseNotes>
    <PackageTags>utilpack async resource pool network stream factory socket</PackageTags>
    <Title>NetworkStream Pooling</Title>
  </PropertyGroup>

  <PropertyGroup>
    <NuGetPushOnBuildFile>$([MSBuild]::GetPathOfFileAbove(NuGetPushOnBuild.targets))</NuGetPushOnBuildFile>
  </PropertyGroup>
  
  <Import Project="$(CIPropsFilePath)" Condition=" '$(CIPropsFilePath)' != '' and Exists('$(CIPropsFilePath)') " />
</Project>
