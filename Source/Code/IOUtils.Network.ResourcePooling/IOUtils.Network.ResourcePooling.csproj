<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.3;netstandard2.0;netcoreapp1.1;netcoreapp2.0;net45;net40</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    <TreatSpecificWarningsAsErrors />
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

   <ItemGroup>
      <ProjectReference Include="..\IOUtils.Network.Configuration\IOUtils.Network.Configuration.csproj" />
   </ItemGroup>
   
   <ItemGroup>
      <PackageReference Include="ResourcePooling.Async.Abstractions" Version="1.0.0" />
   </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <Reference Include="System.Runtime" />
    <Reference Include="System.Threading.Tasks" />
  </ItemGroup>

   <PropertyGroup>
    <VersionPrefix>1.0.0</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <AssemblyTitle>$(AssemblyName)</AssemblyTitle>
    <Description>This library integrates with ResourcePooling library in order to provide common way to create new resources for the pools. The common factor with those resources in this case is that they are based on socket communication, via NetworkStream. Extend NetworkStreamFactory class to implement AsyncResourceFactory&lt;TResource, TParams&gt;, and use extension methods defined for NetworkConnectionCreationInfo to acquire NetworkStreamFactoryConfiguration required for using NetworkStreamFactory.</Description>
  </PropertyGroup>

  <!-- NuGet package stuff -->
  <PropertyGroup>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition=" '$(VersionSuffix)' != ''">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
    <PackageReleaseNotes>Initial release, was UtilPack.ResourcePooling.NetworkStream before.</PackageReleaseNotes>
    <PackageTags>utilpack async resource pool network stream factory socket</PackageTags>
    <Title>IOUtils Networking: ResourcePooling Integration</Title>
  </PropertyGroup>

  <PropertyGroup>
    <NuGetPushOnBuildFile>$([MSBuild]::GetPathOfFileAbove(NuGetPushOnBuild.targets))</NuGetPushOnBuildFile>
  </PropertyGroup>
  
  <Import Project="$(CIPropsFilePath)" Condition=" '$(CIPropsFilePath)' != '' and Exists('$(CIPropsFilePath)') " />
</Project>
